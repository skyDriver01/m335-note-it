// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NoteScreen Tests matches snapshot 1`] = `
<View
  style={
    {
      "backgroundColor": "#fff",
      "flex": 1,
      "justifyContent": "center",
      "padding": 16,
    }
  }
>
  <TextInput
    onChangeText={[Function]}
    placeholder="Enter note title"
    style={
      {
        "borderColor": "#ccc",
        "borderWidth": 1,
        "height": 50,
        "marginBottom": 20,
        "paddingHorizontal": 8,
      }
    }
    value=""
  />
  <TextInput
    multiline={true}
    onChangeText={[Function]}
    placeholder="Enter note content"
    style={
      [
        {
          "borderColor": "#ccc",
          "borderWidth": 1,
          "height": 50,
          "marginBottom": 20,
          "paddingHorizontal": 8,
        },
        {
          "height": 100,
          "textAlignVertical": "top",
        },
      ]
    }
    value=""
  />
  <Text>
    Note Type:
  </Text>
  <View
    style={
      {
        "height": 50,
        "marginBottom": 20,
        "width": "100%",
      }
    }
  >
    <RNCPicker
      items={
        [
          {
            "label": "MISC",
            "testID": undefined,
            "textColor": undefined,
            "value": "MISC",
          },
          {
            "label": "EVENT",
            "testID": undefined,
            "textColor": undefined,
            "value": "EVENT",
          },
          {
            "label": "WORK",
            "testID": undefined,
            "textColor": undefined,
            "value": "WORK",
          },
          {
            "label": "REMINDER",
            "testID": undefined,
            "textColor": undefined,
            "value": "REMINDER",
          },
          {
            "label": "STUDY",
            "testID": undefined,
            "textColor": undefined,
            "value": "STUDY",
          },
          {
            "label": "MEETING",
            "testID": undefined,
            "textColor": undefined,
            "value": "MEETING",
          },
        ]
      }
      numberOfLines={1}
      onChange={[Function]}
      selectedIndex={0}
      style={
        [
          {
            "height": 216,
          },
          undefined,
        ]
      }
    />
  </View>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        [
          {},
        ]
      }
    >
      <Text
        style={
          [
            {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Add Image
      </Text>
    </View>
  </View>
  <RCTScrollView
    data={[]}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={true}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={0.0001}
    stickyHeaderIndices={[]}
    style={
      {
        "marginVertical": 10,
      }
    }
    viewabilityConfigCallbackPairs={[]}
  >
    <View />
  </RCTScrollView>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        [
          {},
        ]
      }
    >
      <Text
        style={
          [
            {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Save Note
      </Text>
    </View>
  </View>
</View>
`;
